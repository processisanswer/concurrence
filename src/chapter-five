CountDownLatch
        CountDownLatch是一个同步工具类，允许一个或多个线程或
    多个线程一致等待，直到其他线程的操作执行完毕再执行。
        CountDownLatch提供了2个方法，一个是countDown,一个是
    await。countDownLatch初始化的时候需要传入一个整数，
    在这个整数倒数到0之前，调用了await方法的程序都必须要等待，
    然后通过countDown来倒数。
使用场景：实现最大的并行请求，让N个线程同时执行
源码分析：存在一个内部类Sync，CountDownLatch实际上是使得线程阻塞了，
既然线程阻塞了一定涉及到AQS队列。
await函数会使当前线程在countdownlatch倒计时到0之前
一直等待，除非线程终端。
--------
Semaphore
    Semaphore就是我们常说的信号灯，Semaphore可以控制
    同时访问的线程个数，通过acquire获取一个许可，如果没有
    就等待，通过release释放一个许可。类似限流的作用。
使用场景
可以实现对某些接口访问的限流
---------
原子操作
java5以后，提供了原子操作类
这些原子操作类提供了一种简单、高效以及线程安全的更新操作。
-------
线程池的使用
JDK为我们内置了机种常见线程池的实现，均可使用
Executors工厂类创建
Executors.newFixedThreadPool()
#返回一个固定数量的线程池，线程数不变，当有一个任务
提交时，













